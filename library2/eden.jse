/**
 * @title Eden Base Library
 * Copyright (c) 2013, Empirical Modelling Group
 * All rights reserved.
 *
 * See LICENSE.txt
 */

/** Debugging flags. */
debug = ${{ {jsExceptions: edenUI.getOptionValue("developer") == "true" } }}$;

// Todo, needs to always be marked out-of-date.
time is ${{ Math.floor((new Date()).getTime() / 1000) }}$;

from is ${{ scope.hasCause(context.lookup("name").value(scope)) }}$;
has is ${{ scope.hasOverride(context.lookup("name").value(scope)) }}$;
/** Outermost observable in scope. #library */
this is ${{ scope.baseCause() }}$;
/** Innermost observable in scope. #library */
self is ${{ scope.self() }}$;

import lib/jsfuncs;

console = [];
/** Print lines to console. #library */
when (console# > 0) {
	for (message in console) {
		message = [str(value->message)];
		call _js_console_log(args->message);
	}
	console = [];
	_menubar_status = message[1];
}(message->@);


errors = [];
when (errors# > 0) {
	for (error in errors) {
		${{ eden.error(new Error(root.value("error",scope)),"error"); }}$;
	}
	errors = [];
}


/** Template View. #library */
View is ("View:")(
	name-->this,
	type-->"ScriptInput",
	visibility-->"visible",
	title-->this,
	width-->200,
	height-->150,
	x-->10,
	y-->10
);

ScriptView is View(title-->"Script View",type->"ScriptView2");


/** Construct views. #library */
when(createViews# > 0) {
	for (view in createViews) {
		name = view.name;
		type = view.type;
		title = view.title;
		curtype = activeDialogs[name];
		if (curtype == type) {
			//view.visibility = "visible";
			name = [name];
			call _js_brieflyHightlightView(args->name);
			//return;
		}

		views += view;
		if (mobile) {
			${{ $(document.body).find("#mainview").html("").append(edenUI.createRawView(root.lookup("name").value(scope),root.lookup("type").value(scope)).contents); }}$;
		} else {
			${{ edenUI.createView(root.lookup("name").value(scope),root.lookup("type").value(scope),root.lookup("title").value(scope)); }}$;
		}
	}
	createViews = [];
}(name-->@,type-->@,view-->@,title-->@);

when (tabs_views_new) {
	console += "NEW TAB";
	nview is View(name->"randomname",type->"ScriptView2");
	createViews += nview;
}

when (tabs_views_current) {
	if (mobile) {
		for (v in views) {
			if (tabs_views_current == v.name) {
				${{ edenUI.vtabs.build(root.lookup("_viewname").value(scope), root.lookup("tabs_views_current").value(scope)); }}$;
				${{ $(document.body).find("#mainview").html("").append(edenUI.createRawView(root.lookup("tabs_views_current").value(scope),undefined).contents); }}$;
				//break;
			}
			i++;
		}
	}
}(v-->@,i-->0)

/** Execute a string as script. #library */
when (execute) {
	${{ eden.execute2(root.value("execute",scope)); }}$;
}

when (menu_new_graphicview) {
	createViews += View(name->${{makeRandomName()}}$,type->"SVGView",title->"Graphic View");
}

when (menu_new_scriptview) {
	createViews += ScriptView(name->${{makeRandomName()}}$);
}

when (menu_new_obslist) {
	createViews += View(name->${{makeRandomName()}}$,type->"ObservableList",title->"Observable List");
}


// Autocalc compatibility
autocalc = 1;

// Include the rest of the library

autocalc = 0;

import lib/type;
import lib/search;
import lib/svg;
//import lib/core;
//import lib/math;
//import lib/string;
//import lib/colour;
//import lib/scoping;

/** Maximum. #library */
max is a if (a >= b) else b;
/** Minimum. #library */
min is a if (a <= b) else b;

/** Is this a mobile device? #library */
mobile is ${{ mobilecheck(); }}$;

_viewname is (view.name)(view in views);
when (mobile && views# > 0) {
	if (views# == 1) tabs_views_current = views[1].name;
	${{ edenUI.vtabs.build(root.lookup("_viewname").value(scope), root.lookup("tabs_views_current").value(scope)); }}$;
}


autocalc = 1;

when (_jseden_loaded) {
	createViews = [];
	views = [];
	activeDialogs = [];

	initialViews = ${{ URLUtil.getParameterByName("views") }}$;
	if (initialViews == "" || initialViews == "default") {
		_view_projects_x = 0;
		_view_projects_y = 0;
		_view_projects_width = 210;
		_view_projects_height = screenHeight;
		//createView = Canvas2D(name->"picture");
		//wait 1;
		picturecenterx is screenWidth / 2 - 30 - _view_picture_width;
		picturecenterprojx is _view_projects_width + _views_frame_width;
		_view_picture_x = max(a->picturecenterx, b->picturecenterprojx);
		_view_picture_y = screenHeight / 2 - _view_picture_height / 2;
		if ((picture == @ || picture == []) && ${{ "logo" in edenUI.branding }}$) {
			//picture is [Image(_view_picture_width / 2 - ${{edenUI.branding.logo.width}}$ / 2, _view_picture_height / 2 - ${{edenUI.branding.logo.height}}$ / 2, ${{edenUI.branding.logo.url}}$)];
		}
		inputview is ScriptView(name->"input");
		if (mobile) {
			${{ document.body.innerHTML = "<div id='viewtabs'></div><div id='mainview'></div>"; }}$;
			${{ edenUI.vtabs = new EdenUI.Tabs($(document.body).find("#viewtabs").get(0), "views"); }}$;
			//views += inputview;
			//create = inputview;
		}
		createViews += inputview;
		_view_input_agent = "view/script/input";
		_view_input_height = _view_picture_height;
		inputcenterx is screenWidth / 2 + 30;
		inputcenterxpic is _view_picture_x + _view_picture_width + _views_frame_width + (_view_picture_x - (_view_projects_x + _view_projects_width + _views_frame_width));
		_view_input_x = min(a->inputcenterx,b->inputcenterxpic);
		_view_input_y = screenHeight / 2 - _view_input_height / 2;
	}
}
//forget(&initialViews);
