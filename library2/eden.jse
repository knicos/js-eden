/**
 * @title Eden Base Library
 * Copyright (c) 2013, Empirical Modelling Group
 * All rights reserved.
 *
 * See LICENSE.txt
 */

// Debugging flags.
debug = ${{ {jsExceptions: edenUI.getOptionValue("developer") == "true" } }}$;

// Todo, needs to always be marked out-of-date.
time is ${{ Math.floor((new Date()).getTime() / 1000) }}$;

from is ${{ scope.hasCause(context.lookup("name").value(scope)) }}$;
has is ${{ scope.hasOverride(context.lookup("name").value(scope)) }}$;
this is ${{ scope.baseCause() }}$;
self is ${{ scope.self() }}$;

import lib/jsfuncs;

console = [];
when (console# > 0) {
	for (message in console) {
		message = [str(value->message)];
		call _js_console_log(args->message);
	}
	console = [];
	_menubar_status = message[1];
}(message->@);


errors = [];
when (errors# > 0) {
	for (error in errors) {
		${{ eden.error(new Error(root.value("error",scope)),"error"); }}$;
	}
	errors = [];
}


View is self+":"+this (
	name-->this,
	type-->"ScriptInput",
	visibility-->"visible",
	title-->this,
	width-->200,
	height-->150,
	x-->10,
	y-->10
);


createViews = [];
views = [];
activeDialogs = [];
when(createViews# > 0) {
	for (view in createViews) {
		name = view.name;
		type = view.type;
		curtype = activeDialogs[name];
		if (curtype == type) {
			//view.visibility = "visible";
			name = [name];
			call _js_brieflyHightlightView(args->name);
			return;
		}

		views += view;
		${{ edenUI.createView(root.lookup("name").value(scope),root.lookup("type").value(scope)); }}$;
	}
	createViews = [];
}(name-->@,type-->@,view-->@);

when (execute) {
	${{ eden.execute2(root.value("execute",scope)); }}$;
}


// Autocalc compatibility
autocalc = 1;

// Include the rest of the library

autocalc = 0;

import lib/type;
import lib/search;
//import lib/core;
//import lib/math;
//import lib/string;
//import lib/colour;
//import lib/scoping;

max is a if (a >= b) else b;
min is a if (a <= b) else b;


autocalc = 1;

initialViews = ${{ URLUtil.getParameterByName("views") }}$;
if (initialViews == "" || initialViews == "default") {
	_view_projects_x = 0;
	_view_projects_y = 0;
	_view_projects_width = 210;
	_view_projects_height = screenHeight;
	//createView = Canvas2D(name->"picture");
	//wait 1;
	picturecenterx is screenWidth / 2 - 30 - _view_picture_width;
	picturecenterprojx is _view_projects_width + _views_frame_width;
	_view_picture_x = max(a->picturecenterx, b->picturecenterprojx);
	_view_picture_y = screenHeight / 2 - _view_picture_height / 2;
	if ((picture == @ || picture == []) && ${{ "logo" in edenUI.branding }}$) {
		//picture is [Image(_view_picture_width / 2 - ${{edenUI.branding.logo.width}}$ / 2, _view_picture_height / 2 - ${{edenUI.branding.logo.height}}$ / 2, ${{edenUI.branding.logo.url}}$)];
	}
	inputview is View(name->"input", type->"ScriptView2");
	createViews += inputview;
	_view_input_agent = "view/script/input";
	_view_input_height = _view_picture_height;
	inputcenterx is screenWidth / 2 + 30;
	inputcenterxpic is _view_picture_x + _view_picture_width + _views_frame_width + (_view_picture_x - (_view_projects_x + _view_projects_width + _views_frame_width));
	_view_input_x = min(a->inputcenterx,b->inputcenterxpic);
	_view_input_y = screenHeight / 2 - _view_input_height / 2;
}
//forget(&initialViews);
